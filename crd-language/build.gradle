configurations { antlr4 }
dependencies {
	antlr4  "org.antlr:antlr4:4.5.1"

	compile "org.antlr:antlr4:4.5.1"
	compile 'org.eclipse.emf:org.eclipse.emf.common:2.11.0-v20150123-0347'
	compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.11.0-v20150123-0347'
	compile 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.11.0-v20150123-0347'
}

apply from: '../gradle/antlr4.gradle'
task generateAntlr4Parser(type: JavaExec) {
	def generatedPath = file('generated')
	generatedPath.mkdir()
	classpath configurations.antlr4
	main = "org.antlr.v4.Tool"
	args = ["grammar/ClockRDL.g4"
		, "-package"
		, "ClockRDL.grammar"
		, "-o"
		, antlr4OutputPath("generated/ClockRDL")]
}

task generateEcore(type: org.ensta.Ecore2JavaGenerationTask)

sourceSets.main.java.srcDir 'generated'
compileJava.dependsOn generateAntlr4Parser, generateEcore

clean << {
    project.delete "tmp"
}

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
}

configurations {
    tests
}

artifacts {
    tests testJar
}
